<%--
  Created by IntelliJ IDEA.
  User: al1
  Date: 19.02.15
--%>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html>
<head>
    <%@include file="../includes.jsp" %>
</head>
<body>

<div id="container" class="container-fluid">
    <%@include file="../header.jsp" %>


    <div class="row">

        <!-- tabs -->
        <div class="panel panel-default">
            <div class="panel-body">
            <%@include file="menu.jsp" %>
            <div class="col-md-8">
                <div class="row">

                    <div class="span8">
                        <h2>Соглашения о правилах кодирования в Java</h2>
                        <hr/>

                        <h4>Основные темы:</h4>
                        <br/>
                        <ul>
                            <li>Соглашение наименования</li>
                            <li>Организация файлов</li>
                            <li>Отступы</li>
                            <li>Пробелы и пустые строки</li>
                            <li>Выражения</li>
                            <li>Комманды</li>
                        </ul>
                        <hr/>

                        <h4>Соглашение наименования</h4>
                        <br/>
                        <p>Имена пакетов записываются прописными буквами, каждое слово отделяется точкой.</p>
                        <p>Имена классов начинаются с заглавной буквы, название представляет собой существительные, записанные с использованием "верблюжей нотации" (camel case)</p>
                        <p>К интерфейсам применяются правила классов</p>
                        <p>Имена методов начинаются с маленькой буквы, и название начинается с глагола и записывается с использованием "верблюжьей нотации"</p>
                        <p>Имена переменных начинаются с маленькой буквы и записывается с использованием "верблюжьей нотации"</p>
                        <p>Имена констант должны быть записаны большими буквами, и слова в названии должны разделяться символом нижнего подчёркивания</p>
                        <br/>

                        <h4>Организация файлов</h4>
                        <br/>
                        <p>В одном файле может находиться только один public-класс (интерфейс)</p>
                        <p>Допускается размещение в том же файле других классов, логически связанных с основным</p>
                        <p>Основной класс должен быть первым в файле</p>
                        <br/>

                        <h4>Пробелы и пустые строки</h4>
                        <br/>
                        <p>Единица отступа – 4 пробела. Длина строки – не более 80 символов</p>
                        <p>Разделитель - одна строка ставится:</p>
                        <ul>
                            <li>между методами</li>
                            <li>перед комментарием</li>
                            <li>между секциями кода внутри метода</li>
                        </ul>
                        <br/>

                        <p>Пробелы ставятся</p>
                        <ul>
                            <li><p>Между ключевым словом и скобкой</p>
                                <p>while (condition) {</p></li>
                            <li><p>После запятой в списке параметров</p>
                                <p>doIt(a, b, c);</p></li>
                            <li><p>Вокруг бинарной операции (кроме «.»)</p>
                                <p>a += b + c;</p></li>
                            <li><p>После «;» в заголовке for</p>
                                <p>for (int i = 0; i < 5; i++)</p></li>
                            <li><p>После операции приведения типа</p>
                                <p>(int) value</p></li>
                        </ul>
                        <br/>

                        <h4>Скобки</h4>
                        <br/>
                        <ul>
                            <li><p>Использовать скобки в условиях</p>
                                <p>if (a == b && c == d) {</p>
                                <p>if ((a == b) && (c == d)) {</p></li>
                            <li><p>Использовать скобки в тернарном операторе</p>
                                <p>(x >= 0) ? x : -x;</p></li>
                        </ul>
                        <br/>

                        <h4>Объявления</h4>
                        <br/>
                        <ul>
                            <li><p>Одно объявление на строку</p>
                                <p>int a, b; // плохо</p>
                                <p>int a;</p>
                                <p>int b; // лучше</p></li>
                            <li>Размещать объявление лучше как можно ближе к месту использования</li>
                            <li><p>Пробел между именем метода и «(» не ставится</p>
                                <p>void doIt()</p></li>
                            <li><p>Фигурная скобка «{» ставится на той же строке через пробел</p>
                                <p>void doIt() {</p></li>
                            <li><p>Фигурная скобка «}» начинает новую строку на том же уровне, что и заголовок метода</p>
                                <p>void doIt() {</p>
                                <p>// ...</p>
                                <p>}</p></li>
                        </ul>
                        <br/>

                        <h4>Выражения</h4>
                        <br/>
                        <p>Простые выражения должны быть в отдельных строках</p>
                        <p>В сложные выражениях операторов if-else, while, do-while, for, switch, try-catch используются фигурные скобки, даже если тело состоит из одной строки</p>
                        <p>if (condition) {<p>
                        <p>&nbsp;doIt();</p>
                        <p>}</p>
                        <br/>
                    </div>
                </div>

                <br/>

            </div>

        </div>
        <!-- tabs -->

      </div>
    </div>

    <footer id="footer"></footer>
</div>

</body>
</html>

